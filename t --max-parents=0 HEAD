[33m15f34d2[m Preparado para Railway deployment - Dashboard con PostgreSQL
[33mbb15086[m Agregado sistema de login con credenciales H4/SRL
[33mb807e3d[m Corregido error de sintaxis async/await en funciones de datos
[33ma52320a[m chore: trigger redeploy and add startup health log
[33m006874c[m feat: configuraci√≥n autom√°tica de Railway con PostgreSQL
[33m5f6cfba[m fix: corregir sintaxis SQL para PostgreSQL (convertir ? a , , etc.)
[33m488188e[m fix: insertar datos de prueba autom√°ticamente en PostgreSQL al arrancar
[33m407f4c3[m debug: agregar logs para debuggear conversi√≥n de queries
[33m68d6b10[m fix: usar PostgreSQL en lugar de SQLite en producci√≥n
[33m6f89043[m fix: corregir estructura de tablas PostgreSQL (store_id como TEXT)
[33m49bf1e5[m fix: agregar m√°s datos de prueba y corregir inserci√≥n de stores
[33mda6f988[m debug: agregar logs detallados para creaci√≥n de tablas PostgreSQL
[33m1137712[m fix: agregar verificaci√≥n de existencia de tablas y timeouts
[33ma2a50e4[m fix: usar PostgreSQL (sqliteDb) en producci√≥n en lugar de SQLite
[33m25ce95d[m fix: usar PostgreSQL en servicio de sincronizaci√≥n en producci√≥n
[33m5544eb8[m feat: ejecutar sincronizaci√≥n en background (202 + /api/sync/status)
[33md9ba7eb[m fix(web): manejar 202 en sync y hacer polling /api/sync/status
[33m026b8d7[m fix: stores UPSERT compatible con Postgres y seed con Number(count)
[33m40ce3cf[m fix(db): asegurar columnas en stores con ALTER TABLE IF NOT EXISTS (email, password, is_active, updated_at)
[33mabf38a7[m fix(sync): deshabilitar cache en /api/sync y /api/sync/status y en fetch del front
[33m75e01e1[m feat: reset completo con configuraci√≥n limpia para Railway + PostgreSQL
[33mf626357[m fix: corregir queries PostgreSQL (DATE()  ::date)
[33mfe4fa76[m fix: detener polling cuando sync est√° en estado idle
[33m6915453[m fix: usar servicios limpios y agregar logs de debug para sincronizaci√≥n
[33m4bde0f7[m fix: corregir constraint null y tipos en queries PostgreSQL
[33m3ab67d3[m debug: agregar logs detallados para API de Linisco y m√©todo getSessionProducts
[33m8ff2432[m debug: agregar logs detallados para queries de productos y estad√≠sticas
[33m32ea006[m  Restore full functionality to server-clean.js
[33me7d8784[m  Fix PostgreSQL sync service configuration
[33mf8d58ad[m  Fix server database configuration for Railway
[33m5e87bf9[m  Add Railway environment configuration and diagnostics
[33mbeb2b71[m  Fix top-products endpoint error in Railway
[33m18b799a[m  Fix PostgreSQL type casting error
[33m68d9057[m  Optimize Railway PostgreSQL deployment
[33mbecb7a2[m  Fix Railway PostgreSQL sync compatibility
[33mbf7f512[m  Fix Railway sync API endpoints and product filtering
[33m0958893[m  Fix Linisco API date format and parameters
[33mef838e4[m  Fix PostgreSQL text = integer error in sync
[33mdaf7cd4[m  Fix PostgreSQL text = integer error in /api/top-products
[33ma1eaf3f[m  Fix PostgreSQL JOIN type casting for store_id
[33m640bbcd[m  Add comprehensive logging to sync service
[33m986f5a2[m  Fix PostgreSQL schema and sync service
[33mfbcc7aa[m  Fix sync service to use sale_orders instead of psessions
[33m2ba881c[m  Fix PostgreSQL schema mismatch
[33mbb3bc2d[m  Add PostgreSQL schema migration endpoint
[33m506bbf6[m  Add SQLite version for Railway deployment
[33m1ee0876[m  Add Railway SQLite configuration and setup guide
[33m1464c6c[m  Configure Railway for SQLite without database service
[33m63387c6[m  Add index.html for SQLite dashboard
[33m1d027ec[m  Restore original dashboard for SQLite
[33mc43be6a[m  Add login route to SQLite server
[33me8c6375[m  Implement single login system for dashboard access
[33mef7ef0e[m  Restore local functionality and prepare for Railway
[33ma8e2070[m  Add SQLite database initialization for Railway
[33macf81f7[m  Improve login security and hide credentials
[33mdb33fc9[m  Fix SQLite database path consistency in Railway
[33m01f23a0[m  Restore complete dashboard functionality with SQLite
[33m707fef7[m  Fix AI integration with Gemini for SQLite server
[33m239a620[m  Add debugging logs for Gemini API configuration
[33m20dc226[m  Add configuration debug endpoint
[33mb3e5532[m  Fix Gemini API configuration in runtime
[33m175c238[m  Add AI service reinitialization endpoint
[33m929940e[m  Add direct Gemini API test endpoint
[33m1359a21[m  Add detailed logging to chatWithContext method
[33m94127b8[m  Add deep AI service diagnosis endpoint
[33m860131d[m  Fix isConfigured() method with detailed logging
[33m5b96d9d[m  Bypass isConfigured() method with direct verification
[33m8bb57f6[m  Implement new Gemini instance per call approach
[33mef3bb93[m  Add test-chat endpoint using same logic as test-gemini
[33m36b4db9[m  Fix chat IA endpoint using working test-chat logic
[33m505c9a5[m  Fix database initialization in dashboard
[33m54e835d[m  Fix chat IA frontend connection issues
[33m978fd0a[m  Fix chat IA to use real database data
[33m4259bc8[m  Add test endpoint for AI service with real data
[33mffb3a4f[m  Implement direct database query chat with real data
[33m8bc36cc[m  Fix chart generation and payment method categorization
[33mfa85080[m  Improve chart data format for frontend
[33m8e3c44c[m  Fix frontend to use real chart data from simpleData
[33m52254af[m feat: actualizar categorizaci√≥n de m√©todos de pago en estad√≠sticas
[33m7c3652f[m fix: corregir categorizaci√≥n de m√©todos de pago
[33m9c0cc5f[m fix: corregir endpoint /api/stats para categorizaci√≥n correcta
[33m35854c2[m fix: corregir frontend para usar payment_category
[33m5e33107[m debug: agregar console.log para debuggear payment_breakdown
[33m749f5c3[m debug: agregar logs al backend para debuggear payment_breakdown
[33m1a583aa[m feat: agregar an√°lisis de datos con Google Colab/Jupyter
[33m6303d18[m debug: agregar m√°s logs al frontend para debuggear payment_breakdown
[33m733d868[m fix: corregir env√≠o de storeId en frontend
[33m4d199ee[m cleanup: reducir logs de debug innecesarios
[33mb0cca43[m debug: agregar logs temporales para debuggear payment_breakdown
[33m172fa5c[m remove: eliminar archivos de Jupyter notebooks y Google Colab
[33ma796cc3[m fix: agregar endpoint /api/stores faltante
[33ma437198[m Fix: Mejorar detecci√≥n de columnas de payment method para SQLite
[33m0e726a2[m feat: Configurar Railway con PostgreSQL
[33m5a6a16b[m fix: Corregir endpoints de sincronizaci√≥n para Railway
[33m8367177[m fix: Corregir endpoint /api/stores para SQLite
[33m67ef3d9[m fix: Corregir inicializaci√≥n de PostgreSQL en Railway
[33mabfe565[m fix: Convertir servicio PostgreSQL a ES6 modules
[33m9709f7c[m fix: Corregir sintaxis SQL para PostgreSQL en consultas de estad√≠sticas
[33m098497f[m feat: Agregar endpoint /api/top-products
[33m44c47d9[m debug: Agregar logs detallados para debugging de PostgreSQL
[33m1806af2[m fix: Corregir validaci√≥n de storeId en consultas SQL
[33m1fceae1[m fix: Actualizar datos de tiendas con informaci√≥n real
[33m241e3b4[m feat: Reestructuraci√≥n completa del proyecto
[33ma23421d[m fix: Corregir conexi√≥n PostgreSQL en Railway
[33m7bedf22[m fix: Mejorar sincronizaci√≥n con API de Linisco
[33m21c494b[m feat: Implementar sistema h√≠brido con datos locales
[33m0735b89[m feat: Simplificar arquitectura a solo API externa
[33m15b4da0[m feat: Arquitectura completamente nueva desde cero
[33m4d21ecb[m feat: Conectar con API real de Linisco usando credenciales de Railway
[33m65ca662[m fix: Corregir endpoints de API de Linisco
[33mbbcacf6[m feat: Sistema h√≠brido API + MySQL con sincronizaci√≥n autom√°tica
[33mc8cdeff[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m docs: Gu√≠as completas de despliegue en Railway con MySQL
